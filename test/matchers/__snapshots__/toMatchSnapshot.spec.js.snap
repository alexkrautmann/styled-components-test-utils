// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`any component - react-test-renderer 1`] = `
.c0 {
  color: palevioletred;
  font-weight: bold;
}

<div>
  <a
    className={undefined}
  >
    Unstyled, boring Link
  </a>
  <br />
  <a
    className="c0"
  >
    Styled, exciting Link
  </a>
</div>
`;

exports[`any component - shallow 1`] = `
<div>
  <Link>
    Unstyled, boring Link
  </Link>
  <br />
  <.sc-bxivhb>
    Styled, exciting Link
  </.sc-bxivhb>
</div>
`;

exports[`attaching additional props - react-test-renderer 1`] = `
.c0 {
  color: red;
}

<div
  className="c0"
/>
`;

exports[`attaching additional props - shallow 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [
        Object {
          "className": "div",
        },
      ],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bZQynM",
        "isStatic": true,
        "lastClassName": "hgXmev",
        "rules": Array [
          "
        color: red;
      ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bZQynM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`basic - react-test-renderer 1`] = `
.c0 {
  padding: 4em;
  background: papayawhip;
}

.c1 {
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
}

<section
  className="c0"
>
  <h1
    className="c1"
  >
    Hello World, this is my first styled component!
  </h1>
</section>
`;

exports[`basic - shallow 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": true,
        "lastClassName": "kpuTtG",
        "rules": Array [
          "
        padding: 4em;
        background: papayawhip;
      ",
        ],
      },
      "displayName": "styled.section",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "section",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <.sc-htpNat>
    Hello World, this is my first styled component!
  </.sc-htpNat>
</StyledComponent>
`;

exports[`empty style - react-test-renderer 1`] = `
<div
  className=""
/>
`;

exports[`empty style - shallow 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "lastClassName": "bDWFJH",
        "rules": Array [],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`extending styles - react-test-renderer 1`] = `
.c0 {
  color: palevioletred;
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;
}

.c1 {
  color: palevioletred;
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;
  color: tomato;
  border-color: tomato;
}

<div>
  <button
    className="c0"
  >
    Normal Button
  </button>
  <button
    className="c1"
  >
    Tomato Button
  </button>
</div>
`;

exports[`extending styles - shallow 1`] = `
<div>
  <.sc-ifAKCX>
    Normal Button
  </.sc-ifAKCX>
  <.sc-EHOje>
    Tomato Button
  </.sc-EHOje>
</div>
`;

exports[`non-styled - mount 1`] = `<div />`;

exports[`non-styled - react-test-renderer 1`] = `<div />`;

exports[`non-styled - shallow 1`] = `<div />`;

exports[`null 1`] = `null`;

exports[`referring to other components - react-test-renderer 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 5px 10px;
  background: papayawhip;
  color: palevioletred;
}

.c2 {
  -webkit-transition: fill 0.25s;
  transition: fill 0.25s;
  width: 48px;
  height: 48px;
}

.c0:hover .c2 {
  fill: rebeccapurple;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  line-height: 1.2;
}

.c3::before {
  content: 'â—€';
  margin: 0 10px;
}

<a
  className="c0 c1"
  href="#"
>
  <svg
    className="c2"
  />
  <span
    className="c3"
  >
    Hovering my parent changes my style!
  </span>
</a>
`;

exports[`supported css - react-test-renderer 1`] = `
.c0 {
  padding: 2em 1em;
  background: papayawhip;
}

.c0:hover {
  background: palevioletred;
}

.c0 > p {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

html.test .c0 {
  display: none;
}

@media (max-width:600px) {
  .c0 {
    background: tomato;
  }

  .c0:hover {
    background: yellow;
  }
}

<div
  className="c0"
>
  <p>
    Hello World!
  </p>
</div>
`;

exports[`supported css - shallow 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htoDjs",
        "isStatic": true,
        "lastClassName": "eIFaJq",
        "rules": Array [
          "
        padding: 2em 1em;
        background: papayawhip;
        &:hover {
          background: palevioletred;
        }
        @media (max-width: 600px) {
          background: tomato;
          &:hover {
            background: yellow;
          }
        }
        > p {
          text-decoration: underline;
        }
        html.test & {
          display: none;
        }
      ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htoDjs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <p>
    Hello World!
  </p>
</StyledComponent>
`;

exports[`theming - react-test-renderer 1`] = `
.c0 {
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border-radius: 3px;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c1 {
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border-radius: 3px;
  color: mediumseagreen;
  border: 2px solid mediumseagreen;
}

<div>
  <button
    className="c0"
  >
    Normal
  </button>
  <button
    className="c1"
  >
    Themed
  </button>
</div>
`;

exports[`theming - shallow 1`] = `
<div>
  <.sc-gzVnrw
    theme={
      Object {
        "main": "palevioletred",
      }
    }
  >
    Normal
  </.sc-gzVnrw>
  <ThemeProvider
    theme={
      Object {
        "main": "mediumseagreen",
      }
    }
  >
    <.sc-gzVnrw
      theme={
        Object {
          "main": "palevioletred",
        }
      }
    >
      Themed
    </.sc-gzVnrw>
  </ThemeProvider>
</div>
`;
